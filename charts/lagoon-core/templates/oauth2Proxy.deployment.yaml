{{- if .Values.oauth2proxy.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "lagoon-core.oauth2proxy.fullname" . }}
  labels:
    {{- include "lagoon-core.oauth2proxy.labels" . | nindent 4 }}
spec:
{{- if not .Values.oauth2proxy.autoscaling.enabled }}
  replicas: {{ .Values.oauth2proxy.replicaCount }}
{{- end }}
  selector:
    matchLabels:
      {{- include "lagoon-core.oauth2proxy.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
    {{- with .Values.oauth2proxy.podAnnotations }}
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "lagoon-core.oauth2proxy.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml (coalesce .Values.oauth2proxy.podSecurityContext .Values.podSecurityContext) | nindent 8 }}
      volumes:
      - emptyDir: {}
        name: nginx-cache
      - configMap:
          defaultMode: 420
          name: oauth2-proxy-nginx
        name: nginx
      - name: keycloak-ca-volume
        secret:
          defaultMode: 420
          items:
          - key: ca.crt
            path: ca.crt
          secretName: keycloak-tls
      containers:
      - image: nginx:alpine
        imagePullPolicy: Always
        name: nginx
        ports:
        - containerPort: 80
          name: nginx
          protocol: TCP
        resources:
          limits:
            cpu: 200m
            memory: 512Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/nginx/
          name: nginx
          readOnly: true
        - mountPath: /var/cache/nginx
          name: nginx-cache
      - name: oauth2proxy
        securityContext:
          {{- toYaml .Values.oauth2proxy.securityContext | nindent 10 }}
        image: "{{ .Values.oauth2proxy.image.repository }}:{{ coalesce .Values.oauth2proxy.image.tag .Values.imageTag "latest" }}"
        imagePullPolicy: {{ .Values.oauth2proxy.image.pullPolicy }}
        env:
        - name: OAUTH2_PROXY_INSECURE_OIDC_SKIP_ISSUER_VERIFICATION
          value: "{{ .Values.oauth2proxy.oidcSkipIssuerVerification }}"
        - name: OAUTH2_PROXY_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: {{ include "lagoon-core.keycloak.fullname" . }}
              key: KEYCLOAK_LAGOON_O2P_CLIENT_SECRET
        - name: OAUTH2_PROXY_COOKIE_SECRET
          valueFrom:
            secretKeyRef:
              name: {{ include "lagoon-core.oauth2proxy.fullname" . }}
              key: OAUTH2_PROXY_COOKIE_SECRET
        - name: OAUTH2_PROXY_PROVIDER
          value: oidc
          value: {{ .Values.oauth2proxy.provider }}
        - name: OAUTH2_PROXY_CLIENT_ID 
          value: lagoon-oauth2proxy
        - name: OAUTH2_PROXY_REDIRECT_URL
          value: https://lagoon-oauth2proxy.172.18.0.240.nip.io
        - name: OAUTH2_PROXY_HTTP_ADDRESS
          value: 0.0.0.0:4180
        - name: OAUTH2_PROXY_OIDC_ISSUER_URL
          value: https://lagoon-keycloak.172.18.0.240.nip.io/auth/realms/lagoon
        - name: OAUTH2_PROXY_EMAIL_DOMAINS
          value: '*'
        - name: OAUTH2_PROXY_COOKIE_SECURE
          value: "false"
        - name: OAUTH2_PROXY_COOKIE_DOMAINS
          value: .nip.io
        - name: OAUTH2_PROXY_WHITELIST_DOMAINS
          value: .nip.io
        - name: OAUTH2_PROXY_SCOPE
          value: openid profile email
        - name: OAUTH2_PROXY_CODE_CHALLENGE_METHOD
          value: S256
        - name: OAUTH2_PROXY_REVERSE_PROXY
          value: "false"
        - name: OAUTH2_PROXY_PROVIDER_CA_FILE
          value: /etc/ssl/certs/keycloak-ca.crt
        - name: OAUTH2_PROXY_PING_PATH
          value: /ping
      {{- range $key, $val := .Values.oauth2proxy.additionalEnvs }}
        - name: {{ $key }}
          value: {{ $val | quote }}
      {{- end }}
        volumeMounts:
          - name: keycloak-ca-volume
            mountPath: /etc/ssl/certs/keycloak-ca.crt
            subPath: ca.crt
            readOnly: true
        ports:
        - containerPort: 4180
          name: http-4180
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /ping
            port: http-4180
            scheme: HTTP
        resources:
        {{- toYaml .Values.oauth2proxy.resources | nindent 10 }}
      {{- with .Values.oauth2proxy.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      affinity:
      {{- with .Values.oauth2proxy.affinity }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.oauth2proxy.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
